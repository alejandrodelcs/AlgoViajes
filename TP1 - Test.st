TestCase subclass: #AlgoViajeTest	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1 - Test'!!AlgoViajeTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/7/2023 12:45'!test04ElViajeMasCaroParaUnUsuarioExtranjeroEsElIndicado	| algoViajes viajeObtenido tarifaEsperada |	"Arrange"	algoViajes := AlgoViajes ConCriterio: 'Maximo'.	algoViajes registrarPasajePara: 'Pedro' deNacionalidad: 'Peruana' conDestinoACiudad: 'Parana' delPais: 'Argentina'		aKms: 16538.	tarifaEsperada := 16538 * 1.28 - 1500. "Kms" "tarifa destino nacional" "Descuento por extranjero yendo a destino nacional"	tarifaEsperada := tarifaEsperada raisedTo: 1.2. "Recargo por Extranjero"	"Act"	viajeObtenido := algoViajes viajeIndicadoSegunCriterioPara: 'Pedro'.	"Assert"	self assert: viajeObtenido destino equals: (CiudadEsperada nombre: 'Parana' en: 'Argentina').	self assert: viajeObtenido tarifa equals: tarifaEsperada! !!AlgoViajeTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/7/2023 12:44'!test03ElViajeMasBaratoParaUnUsuarioDelMercosurEsElIndicado	| algoViajes viajeObtenido tarifaEsperada |	"Arrange"	algoViajes := AlgoViajes ConCriterio: 'Minimo'.	algoViajes registrarPasajePara: 'Pedro' deNacionalidad: 'Peruana' conDestinoACiudad: 'Parana' delPais: 'Argentina'		aKms: 16538.	tarifaEsperada := 16538 * 1.28 - 1500. "Kms" "tarifa destino nacional" "Descuento por extranjero yendo a destino nacional"	tarifaEsperada := tarifaEsperada raisedTo: 1.2. "Recargo por Extranjero"	"Act"	viajeObtenido := algoViajes viajeIndicadoSegunCriterioPara: 'Pedro'.	"Assert"	self		assert: viajeObtenido destino		equals: (CiudadEsperada nombre: 'Parana' en: 'Argentina').	self assert: viajeObtenido tarifa equals: tarifaEsperada! !!AlgoViajeTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/7/2023 13:05'!test07ElViajeMasBaratoParaUnUsuarioArgentinoHaciaUnDestinoDeSudamericaEsElIndicado	| algoViajes viajeObtenido tarifaEsperada | 	"Arrange"	algoViajes := AlgoViajes ConCriterio: 'Minimo'.	algoViajes registrarPasajePara: 'Pedro' deNacionalidad: 'Argentina' conDestinoACiudad: 'Arica' delPais: 'Chile' aKms: 2929.	tarifaEsperada := (2929 "kms" raisedTo: 1.12 "tarifa de preembarco a destino mercosur") * 1.2 "Impuesto al viaje para turistas nacionales" .	"Act"	viajeObtenido := algoViajes viajeIndicadoSegunCriterioPara: 'Pedro'.	"Assert"	self assert: viajeObtenido destino equals: (CiudadEsperada nombre: 'Arica' en: 'Chile').	self assert: viajeObtenido tarifa equals: tarifaEsperada! !!AlgoViajeTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/7/2023 13:29'!test10ElViajeMasBaratoParaUnUsuarioArgentinoDadoUnDestinoSudamericanoYUnoNacionalEsElIndicado		| algoViajes viajeObtenido tarifaEsperada |	"Arrange"	algoViajes := AlgoViajes ConCriterio: 'Minimo'.	algoViajes registrarPasajePara: 'Pedro' deNacionalidad: 'Argentina' conDestinoACiudad: 'Ushuaia' delPais: 'Argentina' aKms: 2377.	algoViajes registrarPasajePara: 'Pedro' deNacionalidad: 'Argentina' conDestinoACiudad: 'Cuzco' delPais: 'Peru' aKms: 9774.	tarifaEsperada := ((2377 "kms" * 1.28  "tarifa destino nacional" ) sqrt "Descuento por ley de impulso turismo nacional" ) * 1.2 "Impuesto al viaje para turistas nacionales".	"Act"   	viajeObtenido := algoViajes viajeIndicadoSegunCriterioPara: 'Pedro'.	"Assert"	self assert: (viajeObtenido destino)  equals: (CiudadEsperada nombre: 'Ushuaia' en: 'Argentina').	self assert: (viajeObtenido tarifa) equals: tarifaEsperada! !!AlgoViajeTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/7/2023 12:59'!test06ElViajeMasBaratoParaUnUsuarioExtranjeroHaciaUnDestinoDeSudamericaEsElIndicado	| algoViajes viajeObtenido tarifaEsperada | 	"Arrange"	algoViajes := AlgoViajes ConCriterio: 'Minimo'.	algoViajes registrarPasajePara: 'Pedro' deNacionalidad: 'Frances' conDestinoACiudad: 'Cuzco' delPais: 'Peru' aKms: 9910.	tarifaEsperada := (9910 "kms" raisedTo: 1.12 "tarifa de preembarco a destino mercosur") "No hay descuento de extranjero a viaje a sudamerica"..	tarifaEsperada := tarifaEsperada raisedTo: 1.2. "Recargo por Extranjero"	"Act"	viajeObtenido := algoViajes viajeIndicadoSegunCriterioPara: 'Pedro'.	"Assert"	self assert: viajeObtenido destino equals: (CiudadEsperada nombre: 'Cuzco' en: 'Peru').	self assert: viajeObtenido tarifa equals: tarifaEsperada! !!AlgoViajeTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 4/20/2023 16:03'!test01ElViajeMasBaratoParaUnUsuarioExtranjeroEsElIndicado	| algoViajes viajeObtenido tarifaEsperada |	"Arrange"	algoViajes := AlgoViajes ConCriterio: 'Minimo'.	algoViajes		registrarPasajePara: 'Pedro'		deNacionalidad: 'Rusa'		conDestinoACiudad: 'Parana'		delPais: 'Argentina'		aKms: 16538.	tarifaEsperada := 16538 * 1.28 - 1500. "Kms" "tarifa destino nacional" "Descuento por extranjero yendo a destino nacional"	tarifaEsperada := tarifaEsperada raisedTo: 1.2. "Recargo por Extranjero"	"Act"	viajeObtenido := algoViajes viajeIndicadoSegunCriterioPara: 'Pedro'.	"Assert"	self		assert: viajeObtenido destino		equals: (CiudadEsperada nombre: 'Parana' en: 'Argentina').	self assert: viajeObtenido tarifa equals: tarifaEsperada! !!AlgoViajeTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/7/2023 14:24'!test12ElViajeMasBaratoParaUnUsuarioArgentinoDadoDosDestinosInternacionalesEsElIndicado		| algoViajes viajeObtenido tarifaEsperada |	"Arrange"	algoViajes := AlgoViajes ConCriterio: 'Minimo'.	algoViajes registrarPasajePara: 'Pedro' deNacionalidad: 'Argentina' conDestinoACiudad: 'Paris' delPais: 'Francia' aKms: 11663.	algoViajes registrarPasajePara: 'Pedro' deNacionalidad: 'Argentina' conDestinoACiudad: 'Lisboa' delPais: 'Portugal' aKms: 10215.	tarifaEsperada := (10215 "kms" log + 3600 "tarifa de preembarco con destino internacional" ) * 1.2 "Impuesto al viaje para turistas nacionales".	"Act"   	viajeObtenido := algoViajes viajeIndicadoSegunCriterioPara: 'Pedro'.	"Assert"	self assert: (viajeObtenido destino)  equals: (CiudadEsperada nombre: 'Lisboa' en: 'Portugal').	self assert: (viajeObtenido tarifa) equals: tarifaEsperada! !!AlgoViajeTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/7/2023 14:59'!test13ElMismoViajeConDestinoNacionalResultaMasBaratoParaUnUsuarioArgentino		| algoViajes tarifaEsperada viajeCaro viajeBarato|	"Arrange"	algoViajes := AlgoViajes ConCriterio: 'Minimo'.	algoViajes registrarPasajePara: 'Alejandro' deNacionalidad: 'Francesa' conDestinoACiudad: 'Ushuaia' delPais: 'Argentina' aKms: 5800.	algoViajes registrarPasajePara: 'Pedro' deNacionalidad: 'Argentina' conDestinoACiudad: 'Ushuaia' delPais: 'Argentina' aKms: 5800.	tarifaEsperada := ((5800 "km" * 1.28 "tarifa destino nacional" ) sqrt "Descuento por ley de impulso turismo nacional") * 1.2 "Impuesto al viaje para turistas nacionales".	"Act"   	viajeCaro := algoViajes viajeIndicadoSegunCriterioPara: 'Alejandro'.	viajeBarato :=  algoViajes viajeIndicadoSegunCriterioPara: 'Pedro'.	"Assert"	self assert: viajeBarato tarifa < viajeCaro tarifa.	self assert: (viajeBarato destino)  equals: (CiudadEsperada nombre: 'Ushuaia' en: 'Argentina').	self assert: (viajeBarato tarifa) equals: tarifaEsperada! !!AlgoViajeTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/7/2023 15:23'!test15ElViajeMasCaroParaUnUsuarioExtranjeroEsElIndicado	| algoViajes viajeObtenido tarifaEsperada |	"Arrange"	algoViajes := AlgoViajes ConCriterio: 'Maximo'.	algoViajes registrarPasajePara: 'Alejo' deNacionalidad: 'Italiana' conDestinoACiudad: 'Ushuaia' delPais: 'Argentina' aKms: 2377.	tarifaEsperada := ((2377 "Kms" * 1.28 "tarifa destino nacional") - 1500 "Descuento por extranjero yendo a destino nacional").	tarifaEsperada := tarifaEsperada raisedTo: 1.2 "Recargo por Extranjero".	"Act"   	viajeObtenido := algoViajes viajeIndicadoSegunCriterioPara: 'Alejo'.	"Assert"	self assert: (viajeObtenido destino)  equals: (CiudadEsperada nombre: 'Ushuaia' en: 'Argentina').	self assert: (viajeObtenido tarifa) equals: tarifaEsperada! !!AlgoViajeTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/7/2023 13:08'!test08ElViajeMasBaratoParaUnUsuarioArgentinoHaciaUnDestinoInternacionalEsElIndicado	| algoViajes viajeObtenido tarifaEsperada | 	"Arrange"	algoViajes := AlgoViajes ConCriterio: 'Minimo'.	algoViajes registrarPasajePara: 'Pedro' deNacionalidad: 'Argentina' conDestinoACiudad: 'Berna' delPais: 'Suiza' aKms: 11181.	tarifaEsperada := (11181 "kms" log + 3600 "tarifa de preembarco con destino internacional" ) * 1.2 "Impuesto al viaje para turistas nacionales".	"Act"	viajeObtenido := algoViajes viajeIndicadoSegunCriterioPara: 'Pedro'.	"Assert"	self assert: viajeObtenido destino equals: (CiudadEsperada nombre: 'Berna' en: 'Suiza').	self assert: viajeObtenido tarifa equals: tarifaEsperada! !!AlgoViajeTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/7/2023 15:22'!test14ElViajeMasBaratoParaUnUsuarioASudamericanoEntreDistintasOpcionesEsElNacional		| algoViajes viajeObtenido tarifaEsperada |	"Arrange"	algoViajes := AlgoViajes ConCriterio: 'Minimo'.	algoViajes registrarPasajePara: 'Alejandro' deNacionalidad: 'Chilena' conDestinoACiudad: 'Ushuaia' delPais: 'Argentina' aKms: 2377.	algoViajes registrarPasajePara: 'Alejandro' deNacionalidad: 'Chilena' conDestinoACiudad: 'Cuzco' delPais: 'Peru' aKms: 3247.	algoViajes registrarPasajePara: 'Alejandro' deNacionalidad: 'Chilena' conDestinoACiudad: 'Lisboa' delPais: 'Argentina' aKms: 10215.		tarifaEsperada := ((2377 "Kms" * 1.28 "tarifa destino nacional") - 1500 "Descuento por extranjero yendo a destino nacional").	tarifaEsperada := tarifaEsperada raisedTo: 1.2 "Recargo por Extranjero".	"Act"   viajeObtenido := algoViajes viajeIndicadoSegunCriterioPara: 'Alejandro'.	"Assert"	self assert: (viajeObtenido destino)  equals: (CiudadEsperada nombre: 'Ushuaia' en: 'Argentina').	self assert: (viajeObtenido tarifa) equals: tarifaEsperada! !!AlgoViajeTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/7/2023 15:29'!test16ElViajeMasCaroParaUnUsuarioExtranjeroDadoUnDestinoSudamericanoYUnoNacionalEsElIndicado	| algoViajes viajeObtenido tarifaEsperada |	"Arrange"	algoViajes := AlgoViajes ConCriterio: 'Minimo'.	algoViajes registrarPasajePara: 'Joaquin' deNacionalidad: 'Española' conDestinoACiudad: 'San Carlos de Bariloche' delPais: 'Argentina' aKms: 10215.	algoViajes registrarPasajePara: 'Joaquin' deNacionalidad: 'Española' conDestinoACiudad: 'Cuzco' delPais: 'Peru' aKms: 3236.	tarifaEsperada := (3236 "kms" raisedTo: 1.12  "tarifa de preembarco a destino mercosur") "No hay descuento de extranjero a viaje a sudamerica".	tarifaEsperada := tarifaEsperada raisedTo: 1.2 "Recargo por Extranjero".	"Act"   	viajeObtenido := algoViajes viajeIndicadoSegunCriterioPara: 'Joaquin'.	"Assert"	self assert: (viajeObtenido destino)  equals: (CiudadEsperada nombre: 'Cuzco' en: 'Peru').	self assert: (viajeObtenido tarifa) equals: tarifaEsperada! !!AlgoViajeTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/7/2023 12:42'!test02ElViajeMasBaratoParaUnUsuarioArgentinoEsElIndicado	| algoViajes viajeObtenido tarifaEsperada |	"Arrange"	algoViajes := AlgoViajes ConCriterio: 'Minimo'.	algoViajes		registrarPasajePara: 'Pedro'		deNacionalidad: 'Argentina'		conDestinoACiudad: 'Parana'		delPais: 'Argentina'		aKms: 16538.	tarifaEsperada := ((16538 "kms" * 1.28 "Tarifa de destino nacion") sqrt "Descuento por ley de impulso turismo nacional") * 1.2 "Impuesto al viaje para turistas nacionales". 	"Act"	viajeObtenido := algoViajes viajeIndicadoSegunCriterioPara: 'Pedro'.	"Assert"	self		assert: viajeObtenido destino		equals: (CiudadEsperada nombre: 'Parana' en: 'Argentina').	self assert: viajeObtenido tarifa equals: tarifaEsperada! !!AlgoViajeTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/7/2023 12:56'!test05ElViajeMasBaratoParaUnUsuarioExtranjeroHaciaUnDestinoExtranjeroEsElIndicado	| algoViajes viajeObtenido tarifaEsperada | 	"Arrange"	algoViajes := AlgoViajes ConCriterio: 'Minimo'.	algoViajes registrarPasajePara: 'Pedro' deNacionalidad: 'Italiana' conDestinoACiudad: 'Paris' delPais: 'Francia' aKms: 1428.	tarifaEsperada := ( 1428 "kms" log + 3600 "tarifa de preembarco con destino internacional") "No hay descuento de extranjero a viaje internacional".	tarifaEsperada := tarifaEsperada raisedTo: 1.2. "Recargo por Extranjero"	"Act"	viajeObtenido := algoViajes viajeIndicadoSegunCriterioPara: 'Pedro'.	"Assert"	self assert: viajeObtenido destino equals: (CiudadEsperada nombre: 'Paris' en: 'Francia').	self assert: viajeObtenido tarifa equals: tarifaEsperada! !!AlgoViajeTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/7/2023 13:24'!test09ElViajeMasBaratoParaUnUsuarioExtranjeroDadoUnDestinoSudamericanoYUnoNacionalEsElIndicado		| algoViajes viajeObtenido tarifaEsperada |	"Arrange"	algoViajes := AlgoViajes ConCriterio: 'Minimo'.	algoViajes registrarPasajePara: 'Pedro' deNacionalidad: 'Francesa' conDestinoACiudad: 'Mendoza' delPais: 'Argentina' aKms: 11306.	algoViajes registrarPasajePara: 'Pedro' deNacionalidad: 'Francesa' conDestinoACiudad: 'Cuzco' delPais: 'Peru' aKms: 9774.	tarifaEsperada := (11306 * 1.28) - 1500.	tarifaEsperada := tarifaEsperada raisedTo: 1.2 "Recargo por Extranjero".	"Act"   	viajeObtenido := algoViajes viajeIndicadoSegunCriterioPara: 'Pedro'.	"Assert"	self assert: (viajeObtenido destino)  equals: (CiudadEsperada nombre: 'Mendoza' en: 'Argentina').	self assert: (viajeObtenido tarifa) equals: tarifaEsperada! !!AlgoViajeTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/7/2023 14:18'!test11ElViajeMasBaratoParaUnUsuarioExtranjeroDadoDosDestinosNacionalesEsElIndicado		| algoViajes viajeObtenido tarifaEsperada |	"Arrange"	algoViajes := AlgoViajes ConCriterio: 'Minimo'.	algoViajes registrarPasajePara: 'Pedro' deNacionalidad: 'Francesa' conDestinoACiudad: 'Junin' delPais: 'Argentina' aKms: 11305.	algoViajes registrarPasajePara: 'Pedro' deNacionalidad: 'Francesa' conDestinoACiudad: 'Ushuaia' delPais: 'Argentina' aKms: 13024.	tarifaEsperada := ((11305 "kms" * 1.28  "tarifa destino nacional" ) - 1500   "Descuento por extranjero yendo a destino nacional").		tarifaEsperada := tarifaEsperada raisedTo: 1.2 "Recargo por Extranjero".	"Act"   	viajeObtenido := algoViajes viajeIndicadoSegunCriterioPara: 'Pedro'.	"Assert"	self assert: (viajeObtenido destino)  equals: (CiudadEsperada nombre: 'Junin' en: 'Argentina').	self assert: (viajeObtenido tarifa) equals: tarifaEsperada! !TestCase subclass: #AlgoViajesTest	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1 - Test'!!AlgoViajesTest methodsFor: 'tests' stamp: 'JG 3/22/2023 12:50'!test07ElViajeMasBaratoParaUnUsuarioArgentinoHaciaUnDestinoInternacionalEsElIndicado
	| algoViajes viajeObtenido tarifaEsperada |
	"Arrange"
	algoViajes := AlgoViajes ConCriterio: 'Minimo'.
	algoViajes registrarPasajePara: 'Diego' deNacionalidad: 'Argentina' conDestinoACiudad: 'Lisboa' delPais: 'Portugal' aKms: 10215.
	tarifaEsperada := (10215 "Kms" log + 3600 "tarifa de preembarco con destino internacional") * 1.2 "Impuesto al viaje para turistas nacionales".
	
	"Act"
   viajeObtenido := algoViajes viajeIndicadoSegunCriterioPara: 'Diego'.

	"Assert"
	self assert: (viajeObtenido destino)  equals: (CiudadEsperada nombre: 'Lisboa' en: 'Portugal').
	self assert: (viajeObtenido tarifa) equals: tarifaEsperada
! !!AlgoViajesTest methodsFor: 'tests' stamp: 'JG 3/22/2023 12:50'!test11ElViajeMasBaratoParaUnUsuarioArgentinoEntreDistintasOpcionesEsElNacional
	| algoViajes viajeObtenido tarifaEsperada |
	"Arrange"
	algoViajes := AlgoViajes ConCriterio: 'Minimo'.

	algoViajes registrarPasajePara: 'Pablo' deNacionalidad: 'Argentina' conDestinoACiudad: 'Ushuaia' delPais: 'Argentina' aKms: 2377.
	algoViajes registrarPasajePara: 'Pablo' deNacionalidad: 'Argentina' conDestinoACiudad: 'Cuzco' delPais: 'Peru' aKms: 3247.
	algoViajes registrarPasajePara: 'Pablo' deNacionalidad: 'Argentina' conDestinoACiudad: 'Lisboa' delPais: 'Portugal' aKms: 10215.
	tarifaEsperada := ((2377 "Kms" * 1.28 "tarifa destino nacional") sqrt "Descuento por ley de impulso turismo nacional") * 1.2 "Impuesto al viaje para turistas nacionales".

	"Act"
   	viajeObtenido := algoViajes viajeIndicadoSegunCriterioPara: 'Pablo'.

	"Assert"
	self assert: (viajeObtenido destino)  equals: (CiudadEsperada nombre: 'Ushuaia' en: 'Argentina').
	self assert: (viajeObtenido tarifa) equals: tarifaEsperada
! !!AlgoViajesTest methodsFor: 'tests' stamp: 'JG 3/22/2023 12:33'!test01ElViajeMasBaratoParaUnUsuarioExtranjeroEsElIndicado
	| algoViajes viajeObtenido tarifaEsperada |
	"Arrange"
	algoViajes := AlgoViajes ConCriterio: 'Minimo'.
	algoViajes registrarPasajePara: 'Alejo' deNacionalidad: 'Italiana' conDestinoACiudad: 'Ushuaia' delPais: 'Argentina' aKms: 2377.
	tarifaEsperada := ((2377 "Kms" * 1.28 "tarifa destino nacional") - 1500 "Descuento por extranjero yendo a destino nacional").
	tarifaEsperada := tarifaEsperada raisedTo: 1.2 "Recargo por Extranjero".

	"Act"
   	viajeObtenido := algoViajes viajeIndicadoSegunCriterioPara: 'Alejo'.

	"Assert"
	self assert: (viajeObtenido destino)  equals: (CiudadEsperada nombre: 'Ushuaia' en: 'Argentina').
	self assert: (viajeObtenido tarifa) equals: tarifaEsperada
! !!AlgoViajesTest methodsFor: 'tests' stamp: 'JG 3/22/2023 12:36'!test02ElViajeMasBaratoParaUnUsuarioExtranjeroHaciaUnDestinoDeSudamericaEsElIndicado
	| algoViajes viajeObtenido tarifaEsperada |
	"Arrange"
	algoViajes := AlgoViajes ConCriterio: 'Minimo'.
	algoViajes registrarPasajePara: 'Alejo' deNacionalidad: 'Italiana' conDestinoACiudad: 'Cuzco' delPais: 'Peru' aKms: 3247.
	tarifaEsperada := (3247 "Kms" raisedTo: 1.12 "tarifa de preembarco a destino mercosur") "No hay descuento de extranjero a viaje a sudamerica".
	tarifaEsperada := tarifaEsperada raisedTo: 1.2 "Recargo por Extranjero".

	"Act"
   	viajeObtenido := algoViajes viajeIndicadoSegunCriterioPara: 'Alejo'.

	"Assert"
	self assert: (viajeObtenido destino) equals: (CiudadEsperada nombre: 'Cuzco' en: 'Peru').
	self assert: (viajeObtenido tarifa) equals: tarifaEsperada
! !!AlgoViajesTest methodsFor: 'tests' stamp: 'JG 3/22/2023 12:50'!test09ElMismoViajeConDestinoSudamericanoResultaMasBaratoParaUnUsuarioArgentino
	| algoViajes viajeCaro viajeBarato tarifaEsperada |
	"Arrange"
	algoViajes := AlgoViajes ConCriterio: 'Minimo'.
	algoViajes registrarPasajePara: 'Alejo' deNacionalidad: 'Italiana' conDestinoACiudad: 'Cuzco' delPais: 'Peru' aKms: 3247.
	algoViajes registrarPasajePara: 'Pablo' deNacionalidad: 'Argentina' conDestinoACiudad: 'Cuzco' delPais: 'Peru' aKms: 3247.
	tarifaEsperada := (3247 "Kms" raisedTo: 1.12 "tarifa de preembarco a destino mercosur") * 1.2 "Impuesto al viaje para turistas nacionales".

	"Act"
   	viajeCaro := algoViajes viajeIndicadoSegunCriterioPara: 'Alejo'.
	viajeBarato :=  algoViajes viajeIndicadoSegunCriterioPara: 'Pablo'.

	"Assert"
	self assert: viajeBarato tarifa < viajeCaro tarifa.
	self assert: (viajeBarato destino)  equals: (CiudadEsperada nombre: 'Cuzco' en: 'Peru').
	self assert: (viajeBarato tarifa) equals: tarifaEsperada
! !!AlgoViajesTest methodsFor: 'tests' stamp: 'JG 3/22/2023 12:50'!test06ElViajeMasBaratoParaUnUsuarioArgentinoHaciaUnDestinoDeSudamericaEsElIndicado
	| algoViajes viajeObtenido tarifaEsperada |
	"Arrange"
	algoViajes := AlgoViajes ConCriterio: 'Minimo'.
	algoViajes registrarPasajePara: 'Diego' deNacionalidad: 'Argentina' conDestinoACiudad: 'Cuzco' delPais: 'Peru' aKms: 3247.
	tarifaEsperada := (3247 "Kms" raisedTo: 1.12 "tarifa de preembarco a destino mercosur") * 1.2 "Impuesto al viaje para turistas nacionales".
	
	"Act"
   	viajeObtenido := algoViajes viajeIndicadoSegunCriterioPara: 'Diego'.

	"Assert"
	self assert: (viajeObtenido destino)  equals: (CiudadEsperada nombre: 'Cuzco' en: 'Peru').
	self assert: (viajeObtenido tarifa) equals: tarifaEsperada
! !!AlgoViajesTest methodsFor: 'tests' stamp: 'JG 3/22/2023 12:50'!test10ElMismoViajeConDestinoInternacionalResultaMasBaratoParaUnUsuarioNacional
	| algoViajes viajeCaro viajeBarato tarifaEsperada |
	"Arrange"
	algoViajes := AlgoViajes ConCriterio: 'Minimo'.
	algoViajes registrarPasajePara: 'Alejo' deNacionalidad: 'Italiana' conDestinoACiudad: 'Lisboa' delPais: 'Portugal' aKms: 10215.
	algoViajes registrarPasajePara: 'Pablo' deNacionalidad: 'Argentina' conDestinoACiudad: 'Lisboa' delPais: 'Portugal' aKms: 10215.
	tarifaEsperada := (10215 "Kms" log + 3600 "tarifa de preembarco con destino internacional")  *1.2 "Impuesto al viaje para turistas nacionales".

	"Act"
   	viajeBarato := algoViajes viajeIndicadoSegunCriterioPara: 'Pablo'.
	viajeCaro :=  algoViajes viajeIndicadoSegunCriterioPara: 'Alejo'.

	"Assert"
	self assert: viajeBarato tarifa < viajeCaro tarifa.
	self assert: (viajeBarato destino)  equals: (CiudadEsperada nombre: 'Lisboa' en: 'Portugal').
	self assert: (viajeBarato tarifa) equals: tarifaEsperada
! !!AlgoViajesTest methodsFor: 'tests' stamp: 'JG 3/22/2023 12:51'!test04ElViajeMasBaratoParaUnUsuarioExtranjeroHaciaUnDestinoInternacionalEsElIndicado
	| algoViajes viajeObtenido tarifaEsperada |
	"Arrange"
	algoViajes := AlgoViajes ConCriterio: 'Minimo'.
	algoViajes registrarPasajePara: 'Alejo' deNacionalidad: 'Italiana' conDestinoACiudad: 'Lisboa' delPais: 'Portugal' aKms: 10215.

	tarifaEsperada := (10215 "Kms" log + 3600 "tarifa de preembarco con destino internacional")  "No hay descuento de extranjero a viaje internacional". 
	tarifaEsperada := tarifaEsperada raisedTo: 1.2 "Recargo por Extranjero".

	"Act"
   	viajeObtenido := algoViajes viajeIndicadoSegunCriterioPara: 'Alejo'.

	"Assert"
	self assert: (viajeObtenido destino)  equals: (CiudadEsperada nombre: 'Lisboa' en: 'Portugal').
	self assert: (viajeObtenido tarifa) equals: tarifaEsperada
! !!AlgoViajesTest methodsFor: 'tests' stamp: 'JG 3/22/2023 12:50'!test08ElMismoViajeConDestinoNacionalResultaMasBaratoParaUnUsuarioArgentino
	| algoViajes viajeCaro viajeBarato tarifaEsperada |
	"Arrange"
	algoViajes := AlgoViajes ConCriterio: 'Minimo'.
	algoViajes registrarPasajePara: 'Alejo' deNacionalidad: 'Italiana' conDestinoACiudad: 'Ushuaia' delPais: 'Argentina' aKms: 2377.
	algoViajes registrarPasajePara: 'Pablo' deNacionalidad: 'Argentina' conDestinoACiudad: 'Ushuaia' delPais: 'Argentina' aKms: 2377.
	tarifaEsperada := ((2377 "Kms" * 1.28 "tarifa destino nacional") sqrt "Descuento por ley de impulso turismo nacional") * 1.2 "Impuesto al viaje para turistas nacionales".

	"Act"
   	viajeCaro := algoViajes viajeIndicadoSegunCriterioPara: 'Alejo'.
	viajeBarato :=  algoViajes viajeIndicadoSegunCriterioPara: 'Pablo'.

	"Assert"
	self assert: viajeBarato tarifa < viajeCaro tarifa.
	self assert: (viajeBarato destino)  equals: (CiudadEsperada nombre: 'Ushuaia' en: 'Argentina').
	self assert: (viajeBarato tarifa) equals: tarifaEsperada
! !!AlgoViajesTest methodsFor: 'tests' stamp: 'JG 3/22/2023 12:34'!test03ElViajeMasBaratoParaUnUsuarioExtranjeroDadoUnDestinoSudamericanoYUnoNacionalEsElIndicado
	| algoViajes viajeObtenido tarifaEsperada |
	"Arrange"
	algoViajes := AlgoViajes ConCriterio: 'Minimo'.
	algoViajes registrarPasajePara: 'Joaquin' deNacionalidad: 'Española' conDestinoACiudad: 'San Carlos de Bariloche' delPais: 'Argentina' aKms: 1578.
	algoViajes registrarPasajePara: 'Joaquin' deNacionalidad: 'Española' conDestinoACiudad: 'Cusco' delPais: 'Peru' aKms: 3236.
	tarifaEsperada := ((1578 "Kms" * 1.28 "tarifa destino nacional") - 1500 "Descuento por extranjero yendo a destino nacional"). 
	tarifaEsperada := tarifaEsperada raisedTo: 1.2 "Recargo por Extranjero".

	"Act"
   	viajeObtenido := algoViajes viajeIndicadoSegunCriterioPara: 'Joaquin'.

	"Assert"
	self assert: (viajeObtenido destino)  equals: (CiudadEsperada nombre: 'San Carlos de Bariloche' en: 'Argentina').
	self assert: (viajeObtenido tarifa) equals: tarifaEsperada
! !!AlgoViajesTest methodsFor: 'tests' stamp: 'JG 3/22/2023 12:50'!test05ElViajeMasBaratoParaUnUsuarioArgentinoEsElIndicado
	| algoViajes viajeObtenido tarifaEsperada |
	"Arrange"
	algoViajes := AlgoViajes ConCriterio: 'Minimo'.
	algoViajes registrarPasajePara: 'Pablo' deNacionalidad: 'Argentina' conDestinoACiudad: 'Ushuaia' delPais: 'Argentina' aKms: 2377.
	tarifaEsperada := ((2377 "Kms" * 1.28 "tarifa destino nacional") sqrt "Descuento por ley de impulso turismo nacional") * 1.2 "Impuesto al viaje para turistas nacionales".

	"Act"
   	viajeObtenido := algoViajes viajeIndicadoSegunCriterioPara: 'Pablo'.

	"Assert"
	self assert: (viajeObtenido destino)  equals: (CiudadEsperada nombre: 'Ushuaia' en: 'Argentina').
	self assert: (viajeObtenido tarifa) equals: tarifaEsperada
! !!AlgoViajesTest methodsFor: 'tests' stamp: 'JG 3/22/2023 12:44'!test12ElViajeMasBaratoParaUnUsuarioExtranjeroDadoUnDestinoSudamericanoYUnoInternacionalEsElIndicado
	| algoViajes viajeObtenido tarifaEsperada |
	"Arrange"
	algoViajes := AlgoViajes ConCriterio: 'Minimo'.

	algoViajes registrarPasajePara: 'Joaquin' deNacionalidad: 'Española' conDestinoACiudad: 'Lisboa' delPais: 'Portugal' aKms: 10215.
	algoViajes registrarPasajePara: 'Joaquin' deNacionalidad: 'Española' conDestinoACiudad: 'Cusco' delPais: 'Peru' aKms: 3236.
	tarifaEsperada := (10215 "Kms" log + 3600 "tarifa de preembarco con destino internacional")  "No hay descuento de extranjero a viaje internacional". 
	tarifaEsperada := tarifaEsperada raisedTo: 1.2 "Recargo por Extranjero".

	"Act"
   viajeObtenido := algoViajes viajeIndicadoSegunCriterioPara: 'Joaquin'.

	"Assert"
	self assert: (viajeObtenido destino)  equals: (CiudadEsperada nombre: 'Lisboa' en: 'Portugal').
	self assert: (viajeObtenido tarifa) equals: tarifaEsperada
! !!AlgoViajesTest methodsFor: 'tests' stamp: 'JG 3/22/2023 12:50'!test13ElViajeMasCaroParaUnUsuarioArgentinoEntreDistintasOpcionesEsElSudamericano
	| algoViajes viajeObtenido tarifaEsperada |
	"Arrange"
	algoViajes := AlgoViajes ConCriterio: 'Maximo'.

	algoViajes registrarPasajePara: 'Pablo' deNacionalidad: 'Argentina' conDestinoACiudad: 'Ushuaia' delPais: 'Argentina' aKms: 2377.
	algoViajes registrarPasajePara: 'Pablo' deNacionalidad: 'Argentina' conDestinoACiudad: 'Cuzco' delPais: 'Peru' aKms: 3247.
	algoViajes registrarPasajePara: 'Pablo' deNacionalidad: 'Argentina' conDestinoACiudad: 'Lisboa' delPais: 'Portugal' aKms: 10215.
	tarifaEsperada := (3247 "Kms" raisedTo: 1.12 "tarifa de preembarco a destino mercosur") * 1.2 "Impuesto al viaje para turistas nacionales".

	"Act"
   viajeObtenido := algoViajes viajeIndicadoSegunCriterioPara: 'Pablo'.

	"Assert"
	self assert: (viajeObtenido destino)  equals: (CiudadEsperada nombre: 'Cuzco' en: 'Peru').
	self assert: (viajeObtenido tarifa) equals: tarifaEsperada
! !TestCase subclass: #CiudadEsperadaTest	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1 - Test'!!CiudadEsperadaTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/7/2023 16:00'!test04ElNombreDeLaCiudadARegistrarEsVacio	"arrange & should"		self should: [(CiudadEsperada nombre: '' en: 'Peru')] raise: ElNombreDeLaCiudadNoPuedeSerVacio.! !!CiudadEsperadaTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/7/2023 15:46'!test02ElNombreDelPaisDebeSerElMismoQueSeRegistra	| ciudadEsperada|	"Arrange"	ciudadEsperada := (CiudadEsperada nombre: 'Cuzco' en: 'Peru').		"assert"	self assert: (ciudadEsperada pais) equals: 'Peru'! !!CiudadEsperadaTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/7/2023 15:44'!test01ElNombreDeLaCiudadDebeSerElMismoQueSeRegistra	| ciudadEsperada|	"Arrange"	ciudadEsperada := (CiudadEsperada nombre: 'Cuzco' en: 'Peru').		"assert"	self assert: (ciudadEsperada nombre) equals: 'Cuzco'! !!CiudadEsperadaTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/7/2023 16:17'!test05ElNombreDelPaisARegistrarEsVacio	"arrange & should"		self should: [(CiudadEsperada nombre: 'Cuzco' en: '')] raise: ElNombreDelPaisNoPuedeSerVacio.! !!CiudadEsperadaTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/7/2023 15:49'!test03ElViajeRegistradoEsElIndicado	| algoViajes viajeObtenido tarifaEsperada |	"Arrange"	algoViajes := AlgoViajes ConCriterio: 'Minimo'.	algoViajes		registrarPasajePara: 'Pedro'		deNacionalidad: 'Argentina'		conDestinoACiudad: 'Parana'		delPais: 'Argentina'		aKms: 16538.	tarifaEsperada := ((16538 "kms" * 1.28 "Tarifa de destino nacion") sqrt "Descuento por ley de impulso turismo nacional") * 1.2 "Impuesto al viaje para turistas nacionales". "Act"	viajeObtenido := algoViajes viajeIndicadoSegunCriterioPara: 'Pedro'.	"Assert"	self assert: viajeObtenido destino equals: (CiudadEsperada nombre: 'Parana' en: 'Argentina').! !Error subclass: #ElNombreDeLaCiudadNoPuedeSerVacio	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1 - Test'!Error subclass: #ElNombreDelPaisNoPuedeSerVacio	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1 - Test'!Error subclass: #ElNombreDelPasajeroNoPuedeSerVacio	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1 - Test'!Error subclass: #KmsNoPuedeSerNegativoNiCero	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1 - Test'!Error subclass: #LaNacionalidadNoPuedeSerVacia	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1 - Test'!Error subclass: #LaTarifaBaseConDescuentoNoPuedeSerNegativoNiCero	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1 - Test'!Error subclass: #LaTarifaBaseDeRecargoNoPuedeSerNegativoNiCero	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1 - Test'!Error subclass: #LaTarifaBaseNoPuedeSerNegativoNiCero	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1 - Test'!Error subclass: #NoExisteCriterioParaEseViaje	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1 - Test'!Error subclass: #NoExistePaisParaCalcularSuTarifa	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1 - Test'!Error subclass: #NoPuedeSerVacioElDestino	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1 - Test'!Error subclass: #NoSePuedeCalcularElDescuentoPorqueEsElMismoQueSuTarifa	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1 - Test'!TestCase subclass: #PasajeroTest	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1 - Test'!!PasajeroTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 20:36'!test15paraUnPasajeroExtranjeroSeAplicaElRecargoYEsNegativoDeberiaLanzarUnaExcepcion		self should: [(Extranjero new aplicarRecargoPara: -1256.25) ] raise: LaTarifaBaseNoPuedeSerNegativoNiCero ! !!PasajeroTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 19:45'!test10paraUnPasajeroArgentinoSeAplicaElDescuentoYEsElIndicado		self assert: (Argentino new aplicarDescuentoPara: 1256.25) equals:  35.443617196894564 .! !!PasajeroTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 20:21'!test08LaNacionalidadDeExtranjeroEsVacio		self should: [(Extranjero new deNacionalidad: '')] raise: LaNacionalidadNoPuedeSerVacia .! !!PasajeroTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 12:33'!test05LaTarifaBaseParaCalcularElRecargoEsNegativoDeberiaLanzarUnError		self should: [(Argentino new aplicarRecargoPara: -9652)] raise: LaTarifaBaseNoPuedeSerNegativoNiCero .! !!PasajeroTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 19:42'!test08LaTarifaBaseParaCalcularDelDEscuentoEsCeroDeberiaLanzarUnError		self should: [(Argentino new aplicarDescuentoPara: 0)] raise: LaTarifaBaseNoPuedeSerNegativoNiCero .! !!PasajeroTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/7/2023 17:15'!test01SiLaNacionalidadDeUnPasajeroEsDeUnPaisInternacionalEsExtranjero		self assert: (Extranjero new deNacionalidad: 'Aleman')! !!PasajeroTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/7/2023 18:13'!test02SiLaNacionalidadDeUnPasajeroEsDeUnPaisInternacionalNoEsArgentino		self assert: (Argentino new deNacionalidad: 'Aleman') not! !!PasajeroTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 20:27'!test12LaTarifaBaseParaUnExtranjeroParaCalcularElDescuentoEsNegativoDeberiaLanzarUnError		self should: [Extranjero new aplicarDescuentoPara: -3620] raise: LaTarifaBaseNoPuedeSerNegativoNiCero! !!PasajeroTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 19:46'!test11LaTarifaBaseParaCalcularDelDescuentoDeExtranjeroEsCeroDeberiaLanzarUnError		self should: [(Extranjero new aplicarDescuentoPara: 0)] raise: LaTarifaBaseNoPuedeSerNegativoNiCero .! !!PasajeroTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 20:29'!test13LaTarifaBaseParaUnExtranjeroEsElIndicado		self assert: (Extranjero new aplicarDescuentoPara: 36984) equals:  35484 .! !!PasajeroTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 12:34'!test07LaNacionalidadEsVacio		self should: [(Argentino new deNacionalidad: '')] raise: LaNacionalidadNoPuedeSerVacia .! !!PasajeroTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 20:32'!test14ParaUnExtranjeroElValorDelDescuentoCoincideConLaTarifaBaseDeberiaLanzarElError		self should: [(Extranjero new aplicarDescuentoPara: 1500)] raise: NoSePuedeCalcularElDescuentoPorqueEsElMismoQueSuTarifa.! !!PasajeroTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 12:34'!test06LaTarifaBaseParaCalcularElRecargoEsCeroDeberiaLanzarUnError		self should: [(Argentino new aplicarRecargoPara: 0)] raise: LaTarifaBaseNoPuedeSerNegativoNiCero .! !!PasajeroTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 02:37'!test04paraUnPasajeroArgentinoSeAplicaElRecargoYEsElIndicado		self assert: (Argentino new aplicarRecargoPara: 1256.25) equals: 1507.5.! !!PasajeroTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 20:35'!test16paraUnPasajeroExtranjeroSeAplicaElRecargoYEsCeroDeberiaLanzarUnaExcepcion		self should: [(Extranjero new aplicarRecargoPara: 0) ] raise: LaTarifaBaseNoPuedeSerNegativoNiCero ! !!PasajeroTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 20:22'!test09LaTarifaBaseParaCalcularElDescuentoParaUnNacionalEsNegativaDeberiaLanzarUnError		self should: [(Argentino new aplicarDescuentoPara: -36522)] raise: LaTarifaBaseNoPuedeSerNegativoNiCero ! !!PasajeroTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/7/2023 18:15'!test03SiLaNacionalidadDeUnPasajeroNacionalSeraArgentino		self assert: (Argentino new deNacionalidad: 'Argentina')! !TestCase subclass: #SelectorViajesTest	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1 - Test'!!SelectorViajesTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/9/2023 19:57'!test04SeRegistraUnViajeConCriterioIncorrectoDeberiaLanzarUnaExcepcion	|viajes selectorViajes |		"arrange"	viajes := OrderedCollection new.	selectorViajes := SelectorViajes.		"Act" 	viajes add: (Viaje new			 conDestinoA: 'Parana'			 en:'Argentina'			 conKms: 16538			 para: 'Pedro'			 deNacionalidad: 'Rusa').		selectorViajes establecerCriterio: 'Ratas'.		"Assert"		self should:[ selectorViajes tarifaPara: viajes] raise: NoExisteCriterioParaEseViaje.! !!SelectorViajesTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/9/2023 20:04'!test01SeRegistraUnViajeSeEsperaQueDevuelvaLaTarifaRespectoAlCriterio	|viajes viajeBajoCriterio selectorViajes|		"arrange"	viajes := OrderedCollection new.	selectorViajes := SelectorViajes.		"Act" 	viajes add: (Viaje new			 conDestinoA: 'Parana'			 en:'Argentina'			 conKms: 16538			 para: 'Pedro'			 deNacionalidad: 'Rusa').	selectorViajes establecerCriterio: 'Minimo'.	viajeBajoCriterio := selectorViajes tarifaPara: viajes.		"Assert"			self assert: (viajeBajoCriterio tarifa) equals: 142078.7729423211! !!SelectorViajesTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 16:12'!test02SiElCriterioEsMaximoDeberiaCumplirLoEsperad	self assert: (SelectorViajesMinimo new conCriterio: 'Minimo').! !!SelectorViajesTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 16:17'!test03SeRegistraDosViajeSeEsperaQueDevuelvaLaTarifaRespectoAlCriterio	|viajes viajeBajoCriterio|		"arrange"	viajes := OrderedCollection new.		"Act" 	viajes add: (Viaje new			 conDestinoA: 'Cuzco'			 en:'Peru'			 conKms: 3247			 para: 'Pedro'			 deNacionalidad: 'Italiana').				viajes add: (Viaje new			 conDestinoA: 'Cuzco'			 en:'Peru'			 conKms: 3247			 para: 'Pedro'			 deNacionalidad: 'Argnentina').			viajeBajoCriterio := SelectorViajesMinimo new tarifaPara: viajes.	"Assert"			self assert: (viajeBajoCriterio tarifa) equals: 52412.176627780966! !TestCase subclass: #TarifaTest	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1 - Test'!!TarifaTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 21:00'!test17SiElPaisEsNacionalElResultadoEsElIndicado	self assert: [Nacional new aceptaPais: 'Argentina']. ! !!TarifaTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 21:14'!test28LaTarifaBaseEsCeroParaUnDestinoNacionalDeberiaLanzarUnaExcepcion		self should: [ Nacional new paraUnosKilometros: 0 ] raise: KmsNoPuedeSerNegativoNiCero ! !!TarifaTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 21:32'!test23ElRecargoParaUnPasajeroInternacionallEsNegativoDeberiaLanzarUnaExcepcion	self should:[Internacional new conRecargoPara: 'Ruso' con: -24366.36] raise: LaTarifaBaseConDescuentoNoPuedeSerNegativoNiCero.! !!TarifaTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 22:25'!test12ElDescuentoParaUnPasajeroSudamericanoEsNegativoDeberiaLanzarUnError		self should: [(Mercosur new conDescuentoPara: 'Peruano' con: -25444)] raise: LaTarifaBaseDeRecargoNoPuedeSerNegativoNiCero! !!TarifaTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 21:33'!test19ElRecargoParaUnPasajeroNacionalEsElSiguiente	|tarifa|	tarifa := Nacional new conRecargoPara: 'Argentina' con: 2546.36.		self assert: tarifa equals: 3055.632.! !!TarifaTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 22:25'!test10ElDescuentoParaUnPasajeroInternacionalEsNegativoDeberiaLanzarUnError		self should: [(Internacional new conDescuentoPara: 'Rusia' con: -6555)] raise: LaTarifaBaseDeRecargoNoPuedeSerNegativoNiCero! !!TarifaTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 22:25'!test11ElDescuentoParaUnPasajeroNacionalEsNegativoDeberiaLanzarUnError		self should: [(Nacional new conDescuentoPara: 'Argentina' con: -96543)] raise: LaTarifaBaseDeRecargoNoPuedeSerNegativoNiCero! !!TarifaTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 20:42'!test04LaTarifaBaseParaUnDestinoMercosurEsLaEsperada	|tarifa|	tarifa := Mercosur new paraUnosKilometros: 16538.		self assert: tarifa equals: 53051.900460839264! !!TarifaTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 21:30'!test25ElRecargoParaUnPasajeroNacionallEsCeroDeberiaLanzarUnaExcepcion	self should:[Nacional new conRecargoPara: 'Argentino' con: 0] raise: LaTarifaBaseConDescuentoNoPuedeSerNegativoNiCero.! !!TarifaTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 21:32'!test22ElRecargoParaUnPasajeroNacionallEsNegativoDeberiaLanzarUnaExcepcion	self should:[Nacional new conRecargoPara: 'Argentino' con: -2546.36] raise: LaTarifaBaseConDescuentoNoPuedeSerNegativoNiCero.! !!TarifaTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 17:22'!test02LaTarifaBaseParaUnDestinoNacionalEsLaEsperada	|tarifa|	tarifa := Nacional new paraUnosKilometros: 16538.		self assert: tarifa equals: 21168.64.! !!TarifaTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 21:51'!test06LaTarifaBaseEsNegativaParaUnDestinoSudamericanoDeberiaLanzarUnaExcepcion		self should: [ Mercosur new paraUnosKilometros: -1654438 ] raise: KmsNoPuedeSerNegativoNiCero ! !!TarifaTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 21:42'!test20ElRecargoParaUnPasajeroInternacionalEsElSiguiente	|tarifa|	tarifa := Internacional new conRecargoPara: 'Ruso' con: 2546.36.		self assert: tarifa equals: 12220.916145089946.! !!TarifaTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 21:04'!test21ElRecargoParaUnPasajeroSudamericanolEsElSiguiente	|tarifa|	tarifa := Mercosur new conRecargoPara: 'Chileno' con: 2546.36.		self assert: tarifa equals: 12220.916145089946.! !!TarifaTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 21:15'!test29LaTarifaBaseEsCeroParaUnDestinoInternacionalDeberiaLanzarUnaExcepcion		self should: [ Internacional new paraUnosKilometros: 0 ] raise: KmsNoPuedeSerNegativoNiCero ! !!TarifaTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 21:19'!test30LaTarifaBaseEsCeroParaUnDestinoSudamericanoDeberiaLanzarUnaExcepcion		self should: [ Mercosur new paraUnosKilometros: 0 ] raise: KmsNoPuedeSerNegativoNiCero ! !!TarifaTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 20:55'!test09ElDescuentoParaUnPasajeroSudamericanoEsElIndicado	|tarifa|	tarifa := Mercosur new conDescuentoPara: 'Chile' con: 2546.36.		self assert: tarifa equals: 2546.36. "No hay descuento porque la nacionalidad del pasajero es internacional"! !!TarifaTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 20:54'!test07ElDescuentoParaUnPasajeroNacionalEsElIndicado	|tarifa|	tarifa := Nacional new conDescuentoPara: 'Argentina' con: 2546.36.		self assert: tarifa equals: 50.461470450235595! !!TarifaTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 21:51'!test06LaTarifaBaseEsNegativaParaUnDestinoInternacionalDeberiaLanzarUnaExcepcion		self should: [ Internacional new paraUnosKilometros: -165538 ] raise: KmsNoPuedeSerNegativoNiCero ! !!TarifaTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 17:21'!test03LaTarifaBaseParaUnDestinoInternacionalEsLaEsperada	|tarifa|	tarifa := Internacional new paraUnosKilometros: 16538.		self assert: tarifa equals: 3604.2184829875937! !!TarifaTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 21:01'!test18SiElPaisEsInternacionalElResultadoEsElIndicado	self assert: [Internacional new aceptaPais: 'Suiza']. ! !!TarifaTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 21:31'!test24ElRecargoParaUnPasajeroSudamericanolEsNegativoDeberiaLanzarUnaExcepcion	self should:[Mercosur new conRecargoPara: 'Peruano' con: -254366.36] raise: LaTarifaBaseConDescuentoNoPuedeSerNegativoNiCero.! !!TarifaTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 21:55'!test08ElDescuentoParaUnPasajeroInternacionalEsElIndicado	|tarifa|	tarifa := Internacional  new conDescuentoPara: 'Alemania' con: 25446.36.		self assert: tarifa equals: 25446.36. "No hay descuento porque la nacionalidad del pasajero es internacional"! !!TarifaTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 22:25'!test14ElDescuentoParaUnPasajeroNacionalEsCeroDeberiaLanzarUnError		self should: [(Nacional new conDescuentoPara: 'Argentina' con: 0)] raise: LaTarifaBaseDeRecargoNoPuedeSerNegativoNiCero! !!TarifaTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 22:37'!test31NoExistePaisAQuienCalcularTarifaDeberiaDarUnError		self should: [ Tarifa seleccionarTipoDePara: '*'] raise: NoExistePaisParaCalcularSuTarifa! !!TarifaTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 21:00'!test16SiElPaisEsSudamericanoElResultadoEsElIndicado	self assert: [Mercosur new aceptaPais: 'Peru']. ! !!TarifaTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 22:25'!test13ElDescuentoParaUnPasajeroInternacionEsCeroDeberiaLanzarUnError		self should: [(Internacional new conDescuentoPara: 'Ruso' con: 0)] raise: LaTarifaBaseDeRecargoNoPuedeSerNegativoNiCero! !!TarifaTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 21:51'!test05LaTarifaBaseEsNegativaParaUnDestinoNacionalDeberiaLanzarUnaExcepcion		self should: [Nacional new paraUnosKilometros: -1653338 ] raise: KmsNoPuedeSerNegativoNiCero ! !!TarifaTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 21:29'!test26ElRecargoParaUnPasajeroInternacionalEsCeroDeberiaLanzarUnaExcepcion	self should:[Internacional new conRecargoPara: 'Ruso' con: 0] raise: LaTarifaBaseConDescuentoNoPuedeSerNegativoNiCero.! !!TarifaTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 22:26'!test15ElDescuentoParaUnPasajeroSudamericanoEsCeroDeberiaLanzarUnError		self should: [(Mercosur new conDescuentoPara: 'Peruano' con: 0)] raise: LaTarifaBaseDeRecargoNoPuedeSerNegativoNiCero! !!TarifaTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 21:30'!test27ElRecargoParaUnPasajeroSudamericanoEsCeroDeberiaLanzarUnaExcepcion	self should:[Mercosur new conRecargoPara: 'Peruano' con: 0] raise: LaTarifaBaseConDescuentoNoPuedeSerNegativoNiCero.! !TestCase subclass: #ViajeTest	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1 - Test'!!ViajeTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 19:20'!test02ElDestinoEsElIndicado 	|viaje|	viaje := Viaje new conDestinoA: 'Lima' en: 'Peru' conKms: 12563 para: 'Alejandro' deNacionalidad: 'Argentina' .	self assert: viaje destino equals: (CiudadEsperada nombre: 'Lima' en: 'Peru')! !!ViajeTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 19:21'!test03LaTarifaEsElIndicado 	|viaje|	viaje := Viaje new conDestinoA: 'Lima' en: 'Peru' conKms: 12563 para: 'Alejandro' deNacionalidad: 'Argentina' .	self assert: viaje tarifa equals: 46791.37516607882! !!ViajeTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 19:22'!test04ElNombreDelPasajeroEsElIndicado	|viaje|	viaje := Viaje new conDestinoA: 'Lima' en: 'Peru' conKms: 12563 para: 'Alejandro' deNacionalidad: 'Argentina' .	self assert: viaje nombrePasajero equals: 'Alejandro'! !!ViajeTest methodsFor: 'tests' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 19:17'!test01ElNombreDelPasajeroNoPuedeSerVacio	self should:[Viaje new conDestinoA: 'Lima' en: 'Peru' conKms: 12563 para: '' deNacionalidad: 'Argentina' ] raise: ElNombreDelPasajeroNoPuedeSerVacio ! !