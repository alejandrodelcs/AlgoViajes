Class subclass: #AlgoViajes	instanceVariableNames: 'viajes selectorViajes'	classVariableNames: ''	package: 'TP1'!!AlgoViajes methodsFor: 'not defined category' stamp: 'AlejandroDelCarpioSanchez 5/9/2023 21:29'!registrarPasajePara: nombrePasajero deNacionalidad: nacionalidadPasajero conDestinoACiudad: ciudadDestino delPais: paisDestino aKms: distanciaKilometros		viajes add: (Viaje new			 conDestinoA: ciudadDestino			 en: paisDestino			 conKms: distanciaKilometros			 para: nombrePasajero			 deNacionalidad: nacionalidadPasajero)! !!AlgoViajes methodsFor: 'not defined category' stamp: 'AlejandroDelCarpioSanchez 5/7/2023 08:02'!viajesDelPasajero: nombrePasajero	^ viajes select: [ :v | v nombrePasajero = nombrePasajero ]! !!AlgoViajes methodsFor: 'not defined category' stamp: 'AlejandroDelCarpioSanchez 5/9/2023 19:45'!viajeIndicadoSegunCriterioPara: nombrePasajero	^selectorViajes tarifaPara:  (self viajesDelPasajero: nombrePasajero)! !!AlgoViajes methodsFor: 'not defined category' stamp: 'AlejandroDelCarpioSanchez 5/9/2023 19:52'!selectorViajes	^selectorViajes.! !!AlgoViajes methodsFor: 'initialization' stamp: 'AlejandroDelCarpioSanchez 5/9/2023 21:30'!initialize 	viajes := OrderedCollection new. 	selectorViajes := SelectorViajes.	! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!AlgoViajes class	instanceVariableNames: ''!!AlgoViajes class methodsFor: 'not defined category' stamp: 'AlejandroDelCarpioSanchez 5/9/2023 19:52'!ConCriterio: unCriterio	| algoViajes|	algoViajes := self new.	(algoViajes selectorViajes) establecerCriterio: unCriterio. 	^algoViajes. ! !Class subclass: #CiudadEsperada	instanceVariableNames: 'nombre pais'	classVariableNames: ''	package: 'TP1'!!CiudadEsperada methodsFor: 'comparing' stamp: 'JG 4/5/2023 11:28'!= other	^nombre = (other nombre).! !!CiudadEsperada methodsFor: 'not defined category' stamp: 'AlejandroDelCarpioSanchez 5/7/2023 16:16'!establecerNombre: unNombre	(unNombre isEmptyOrNil )ifTrue: [ElNombreDeLaCiudadNoPuedeSerVacio new signal ].	nombre := unNombre! !!CiudadEsperada methodsFor: 'not defined category' stamp: 'AlejandroDelCarpioSanchez 5/7/2023 15:46'!pais 	^pais "es funcional solo para pruebas unitarias"! !!CiudadEsperada methodsFor: 'not defined category' stamp: 'AlejandroDelCarpioSanchez 5/7/2023 16:15'!establecerPais: unPais	(unPais isEmptyOrNil ) ifTrue:[ElNombreDelPaisNoPuedeSerVacio new signal].	pais := unPais.! !!CiudadEsperada methodsFor: 'not defined category' stamp: 'AlejandroDelCarpioSanchez 5/3/2023 00:30'!nombre 	^nombre ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!CiudadEsperada class	instanceVariableNames: ''!!CiudadEsperada class methodsFor: 'not defined category' stamp: 'AlejandroDelCarpioSanchez 4/14/2023 21:17'!nombre: unNombre en: unPais| ciudadEsperada |	ciudadEsperada := self new.	ciudadEsperada establecerNombre: unNombre. 	ciudadEsperada establecerPais: unPais.	^ciudadEsperada! !Object subclass: #Pasajero	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!Pasajero methodsFor: 'initialization' stamp: 'AlejandroDelCarpioSanchez 5/7/2023 04:45'!deNacionalidad: unaNacionalidad	self subclassResponsibility.! !!Pasajero methodsFor: 'initialization' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 12:35'!aplicarRecargoPara: tarifaBase 	self subclassResponsibility.! !!Pasajero methodsFor: 'initialization' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 12:35'!aplicarDescuentoPara: tarifaBase	self subclassResponsibility.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Pasajero class	instanceVariableNames: ''!!Pasajero class methodsFor: 'initialization' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 23:44'!seleccionarTipoPara: unaNacionalidad	| nacionalidades pasajero|	nacionalidades := { Argentino new. Extranjero new}.	pasajero := self new.     pasajero := nacionalidades detect: [ :f | f deNacionalidad: unaNacionalidad].	^pasajero! !!Pasajero class methodsFor: 'initialization' stamp: 'AlejandroDelCarpioSanchez 5/10/2023 02:40'!recargoCon: unaNacionalidad con: tarifaBase	^ (self seleccionarTipoPara: unaNacionalidad)          aplicarRecargoPara: tarifaBase! !!Pasajero class methodsFor: 'initialization' stamp: 'AlejandroDelCarpioSanchez 5/10/2023 02:40'!descuentoCon: unaNacionalidad con: tarifaBase	^ (self seleccionarTipoPara: unaNacionalidad)          aplicarDescuentoPara: tarifaBase! !Pasajero subclass: #Argentino	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!Argentino methodsFor: 'not defined category' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 03:20'!deNacionalidad: unaNacionalidad	(unaNacionalidad isEmptyOrNil)ifTrue:[LaNacionalidadNoPuedeSerVacia new signal].	^(unaNacionalidad = 'Argentina')! !!Argentino methodsFor: 'not defined category' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 03:16'!aplicarRecargoPara: tarifaBase 	(tarifaBase <= 0) ifTrue:[LaTarifaBaseNoPuedeSerNegativoNiCero new signal].	^(tarifaBase * 1.2)! !!Argentino methodsFor: 'not defined category' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 12:15'!aplicarDescuentoPara: tarifaBase	(tarifaBase <= 0) ifTrue:[LaTarifaBaseNoPuedeSerNegativoNiCero new signal].	^(tarifaBase sqrt )! !Pasajero subclass: #Extranjero	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!Extranjero methodsFor: 'not defined category' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 03:20'!deNacionalidad: unaNacionalidad	(unaNacionalidad isEmptyOrNil)ifTrue:[LaNacionalidadNoPuedeSerVacia new signal].	^(unaNacionalidad ~= 'Argentina')! !!Extranjero methodsFor: 'not defined category' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 03:16'!aplicarRecargoPara: tarifaBase 	(tarifaBase <= 0) ifTrue:[LaTarifaBaseNoPuedeSerNegativoNiCero new signal].	^(tarifaBase raisedTo: 1.2) ! !!Extranjero methodsFor: 'not defined category' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 20:31'!aplicarDescuentoPara: tarifaBase	(tarifaBase <= 0) ifTrue:[LaTarifaBaseNoPuedeSerNegativoNiCero new signal].	(tarifaBase = 1500) ifTrue:[NoSePuedeCalcularElDescuentoPorqueEsElMismoQueSuTarifa new signal].	^tarifaBase - 1500! !Object subclass: #SelectorViajes	instanceVariableNames: 'tipoDeCriterio'	classVariableNames: ''	package: 'TP1'!!SelectorViajes methodsFor: 'not defined category' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 12:56'!tarifaPara: unViaje	self subclassResponsibility.! !!SelectorViajes methodsFor: 'not defined category' stamp: 'AlejandroDelCarpioSanchez 5/7/2023 07:18'!conCriterio: criterio	self subclassResponsibility! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!SelectorViajes class	instanceVariableNames: 'criterio'!!SelectorViajes class methodsFor: 'not defined category' stamp: 'AlejandroDelCarpioSanchez 5/10/2023 03:19'!tarifaPara: viajes	|selectores tipoDeSelector |	selectores := { SelectorViajesMaximo new. SelectorViajesMinimo new }.	tipoDeSelector := selectores detect: [ :f | f conCriterio: criterio ] ifNone: [ NoExisteCriterioParaEseViaje new signal ].	^ tipoDeSelector tarifaPara: viajes! !!SelectorViajes class methodsFor: 'as yet unclassified' stamp: 'AlejandroDelCarpioSanchez 5/9/2023 19:42'!establecerCriterio: unCriterio	criterio := unCriterio.! !SelectorViajes subclass: #SelectorViajesMaximo	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!SelectorViajesMaximo methodsFor: 'not defined category' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 01:42'!tarifaPara: unViaje	^(unViaje detectMax: [ :p | p tarifa ] )	! !!SelectorViajesMaximo methodsFor: 'not defined category' stamp: 'AlejandroDelCarpioSanchez 5/7/2023 07:19'!conCriterio: criterio	^(criterio = 'Maximo')! !SelectorViajes subclass: #SelectorViajesMinimo	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!SelectorViajesMinimo methodsFor: 'not defined category' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 01:42'!tarifaPara: unViaje	^(unViaje detectMin: [ :p | p tarifa ] )! !!SelectorViajesMinimo methodsFor: 'not defined category' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 16:24'!conCriterio: criterio	^(criterio =  'Minimo')! !Class subclass: #Tarifa	instanceVariableNames: 'tipoDeTarifa mercosurPaises internacionalPaises pasajero'	classVariableNames: ''	package: 'TP1'!!Tarifa methodsFor: 'not defined category' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 12:20'!conRecargoPara: unaNacionalidad con: tarifaBaseConDescuento	self subclassResponsibility! !!Tarifa methodsFor: 'not defined category' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 19:08'!paraUnosKilometros: kilometros	self subclassResponsibility.! !!Tarifa methodsFor: 'not defined category' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 19:02'!aceptaPais: unPais	self subclassResponsibility! !!Tarifa methodsFor: 'not defined category' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 12:20'!conDescuentoPara: unaNacionalidad con: tarifaBase	self subclassResponsibility! !!Tarifa methodsFor: 'not defined category' stamp: 'AlejandroDelCarpioSanchez 5/9/2023 16:01'!initialize 	mercosurPaises  := #('Peru' 'Chile' 'Colombia' 'Uruguay'	               'Venezuela' 'Bolivia' ).	internacionalPaises := #('Francia' 'Suiza' 'Portugal').	pasajero := Pasajero ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Tarifa class	instanceVariableNames: 'tarifa tipoDeTarifa'!!Tarifa class methodsFor: 'not defined category' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 22:29'!seleccionarTipoDePara: unPais 	|tipoPais|	tipoPais := { Nacional new. Mercosur new. Internacional new }.    tipoDeTarifa := tipoPais detect: [ :f | f aceptaPais: unPais ] ifNone: [ NoExistePaisParaCalcularSuTarifa new signal].	! !!Tarifa class methodsFor: 'not defined category' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 12:20'!para: unPais aKms: unosKilometros paraPasajeroDeNacionalidad: unaNacionalidad	|tarifaBase tarifaBaseConDescuento tarifaTotal|	self seleccionarTipoDePara: unPais.	tarifaBase := (tipoDeTarifa) paraUnosKilometros: unosKilometros.	tarifaBaseConDescuento:= tipoDeTarifa conDescuentoPara: unaNacionalidad con: tarifaBase. 	tarifaTotal :=   tipoDeTarifa conRecargoPara: unaNacionalidad con: tarifaBaseConDescuento.		^tarifaTotal 	! !Tarifa subclass: #Internacional	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!Internacional methodsFor: 'not defined category' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 22:40'!aceptaPais: unPais	^ internacionalPaises includes: unPais! !!Internacional methodsFor: 'not defined category' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 19:06'!paraUnosKilometros: kilometros	(kilometros <= 0) ifTrue:[KmsNoPuedeSerNegativoNiCero new signal].	^ kilometros log + 3600! !!Internacional methodsFor: 'not defined category' stamp: 'AlejandroDelCarpioSanchez 5/10/2023 02:40'!conRecargoPara: unaNacionalidad con: tarifaBaseConDescuento	(tarifaBaseConDescuento <= 0) ifTrue:[LaTarifaBaseConDescuentoNoPuedeSerNegativoNiCero new signal].	^ (pasajero recargoCon: unaNacionalidad con: tarifaBaseConDescuento)! !!Internacional methodsFor: 'not defined category' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 22:24'!conDescuentoPara: unaNacionalidad con: tarifaBase	(tarifaBase <= 0) ifTrue:[LaTarifaBaseDeRecargoNoPuedeSerNegativoNiCero new signal].	^ tarifaBase! !Tarifa subclass: #Mercosur	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!Mercosur methodsFor: 'not defined category' stamp: 'AlejandroDelCarpioSanchez 5/7/2023 05:39'!aceptaPais: unPais	^ mercosurPaises includes: unPais! !!Mercosur methodsFor: 'not defined category' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 19:06'!paraUnosKilometros: kilometros	(kilometros <= 0) ifTrue:[KmsNoPuedeSerNegativoNiCero new signal].	^ kilometros raisedTo: 1.12! !!Mercosur methodsFor: 'not defined category' stamp: 'AlejandroDelCarpioSanchez 5/10/2023 02:40'!conRecargoPara: unaNacionalidad con: tarifaBaseConDescuento	(tarifaBaseConDescuento <= 0) ifTrue:[LaTarifaBaseConDescuentoNoPuedeSerNegativoNiCero new signal].	^ (pasajero recargoCon: unaNacionalidad con: tarifaBaseConDescuento)! !!Mercosur methodsFor: 'not defined category' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 22:24'!conDescuentoPara: unaNacionalidad con: tarifaBase	(tarifaBase <= 0) ifTrue:[LaTarifaBaseDeRecargoNoPuedeSerNegativoNiCero new signal].	^ tarifaBase! !Tarifa subclass: #Nacional	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!Nacional methodsFor: 'not defined category' stamp: 'AlejandroDelCarpioSanchez 5/7/2023 05:40'!aceptaPais: unPais	^ unPais = 'Argentina'! !!Nacional methodsFor: 'not defined category' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 19:08'!paraUnosKilometros: kilometros	(kilometros <= 0) ifTrue:[KmsNoPuedeSerNegativoNiCero new signal].	^ kilometros * 1.28! !!Nacional methodsFor: 'not defined category' stamp: 'AlejandroDelCarpioSanchez 5/10/2023 02:40'!conRecargoPara: unaNacionalidad con: tarifaBaseConDescuento	(tarifaBaseConDescuento <= 0) ifTrue:[LaTarifaBaseConDescuentoNoPuedeSerNegativoNiCero new signal].	^ (pasajero recargoCon: unaNacionalidad con: tarifaBaseConDescuento)! !!Nacional methodsFor: 'not defined category' stamp: 'AlejandroDelCarpioSanchez 5/10/2023 02:40'!conDescuentoPara: unaNacionalidad con: tarifaBase	(tarifaBase <= 0) ifTrue:[LaTarifaBaseDeRecargoNoPuedeSerNegativoNiCero new signal].	^ (pasajero descuentoCon: unaNacionalidad con: tarifaBase)! !Object subclass: #Viaje	instanceVariableNames: 'paisDestino ciudadDestino nacionalidadPasajero nombrePasajero distanciaKilometros tarifa ciudadEsperada'	classVariableNames: ''	package: 'TP1'!!Viaje methodsFor: 'not defined category' stamp: 'AlejandroDelCarpioSanchez 5/9/2023 16:04'!destino 		^(ciudadEsperada nombre: ciudadDestino en: paisDestino).! !!Viaje methodsFor: 'not defined category' stamp: 'AlejandroDelCarpioSanchez 5/7/2023 08:02'!nombrePasajero 	^nombrePasajero.! !!Viaje methodsFor: 'not defined category' stamp: 'AlejandroDelCarpioSanchez 5/9/2023 16:04'!tarifa	^tarifa para: paisDestino aKms: distanciaKilometros paraPasajeroDeNacionalidad: nacionalidadPasajero! !!Viaje methodsFor: 'not defined category' stamp: 'AlejandroDelCarpioSanchez 5/8/2023 19:12'!conDestinoA: ciudad en: pais conKms: distancia para: nombre deNacionalidad: nacionalidad	(nombre isEmptyOrNil ) ifTrue:[ElNombreDelPasajeroNoPuedeSerVacio new signal].	ciudadDestino := ciudad.	paisDestino := pais.	nombrePasajero := nombre.	nacionalidadPasajero := nacionalidad.  	distanciaKilometros := distancia.! !!Viaje methodsFor: 'not defined category' stamp: 'AlejandroDelCarpioSanchez 5/9/2023 16:04'!initialize 	tarifa := Tarifa.	ciudadEsperada := CiudadEsperada! !